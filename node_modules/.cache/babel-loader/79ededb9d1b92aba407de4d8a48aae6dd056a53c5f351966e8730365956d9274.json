{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/programs/sublair_files/sublair/src/paypal/PaypalCheckoutButton.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaypalCheckoutButton = props => {\n  _s();\n  const {\n    product\n  } = props;\n  const [paidFor, setPaidFor] = useState(false);\n  const [error, setError] = useState(null);\n  const handleApprove = orderId => {\n    setPaidFor(true);\n  };\n  if (paidFor) {\n    // alert(\"success\");\n  }\n  if (error) {\n    alert(error);\n  }\n  return /*#__PURE__*/_jsxDEV(PayPalButtons, {\n    style: {\n      color: \"silver\",\n      height: 48,\n      tagline: false\n    },\n    onClick: (data, actions) => {\n      const alreadyPurchased = false;\n      if (alreadyPurchased) {\n        setError(\"you already bought this item\");\n        return actions.reject();\n      } else {\n        return actions.resolve();\n      }\n    },\n    createOrder: (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          description: product.description,\n          amount: {\n            value: product.price\n          }\n        }]\n      });\n    },\n    onApprove: async (data, actions) => {\n      const order = await actions.order.capture();\n      console.log(\"order\", order);\n      handleApprove(data.orderID);\n    },\n    onCancel: () => {},\n    onError: err => {\n      setError(err);\n      console.log(err);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n_s(PaypalCheckoutButton, \"nImoUOteiZgAqlD19EeTXGGETTg=\");\n_c = PaypalCheckoutButton;\nexport default PaypalCheckoutButton;\nvar _c;\n$RefreshReg$(_c, \"PaypalCheckoutButton\");","map":{"version":3,"names":["useState","PayPalButtons","PaypalCheckoutButton","props","product","paidFor","setPaidFor","error","setError","handleApprove","orderId","alert","color","height","tagline","data","actions","alreadyPurchased","reject","resolve","order","create","purchase_units","description","amount","value","price","capture","console","log","orderID","err"],"sources":["/Users/michael/Desktop/programs/sublair_files/sublair/src/paypal/PaypalCheckoutButton.js"],"sourcesContent":["import { useState } from \"react\";\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\nconst PaypalCheckoutButton = (props) => {\n    const { product } = props;\n\n    const [paidFor, setPaidFor] = useState(false);\n    const [error, setError] = useState(null);\n\n    const handleApprove = (orderId) => {\n        setPaidFor(true);\n    }\n\n    if (paidFor) {\n        // alert(\"success\");\n    }\n\n    if (error) {\n        alert(error);\n    }\n\n    return <PayPalButtons\n        style={{\n            color: \"silver\",\n            height: 48,\n            tagline: false\n        }}\n        onClick={(data, actions) => {\n            const alreadyPurchased = false;\n\n            if(alreadyPurchased) {\n                setError(\"you already bought this item\");\n                return actions.reject();\n            } else {\n                return actions.resolve();\n            }\n        }}\n        createOrder={(data, actions) => {\n            return actions.order.create({\n                purchase_units: [\n                    {\n                        description: product.description,\n                        amount: {\n                            value: product.price\n                        }\n                    }\n                ]\n            });\n        }}\n        onApprove={async (data, actions) => {\n            const order = await actions.order.capture();\n            console.log(\"order\", order);\n\n            handleApprove(data.orderID);\n        }}\n        onCancel={() => {\n\n        }}\n        onError={(err) => {\n            setError(err);\n            console.log(err);\n        }}\n    />\n}\n\nexport default PaypalCheckoutButton;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,yBAAyB;AAAC;AACxD,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EAAA;EACpC,MAAM;IAAEC;EAAQ,CAAC,GAAGD,KAAK;EAEzB,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,aAAa,GAAIC,OAAO,IAAK;IAC/BJ,UAAU,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,IAAID,OAAO,EAAE;IACT;EAAA;EAGJ,IAAIE,KAAK,EAAE;IACPI,KAAK,CAACJ,KAAK,CAAC;EAChB;EAEA,oBAAO,QAAC,aAAa;IACjB,KAAK,EAAE;MACHK,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACb,CAAE;IACF,OAAO,EAAE,CAACC,IAAI,EAAEC,OAAO,KAAK;MACxB,MAAMC,gBAAgB,GAAG,KAAK;MAE9B,IAAGA,gBAAgB,EAAE;QACjBT,QAAQ,CAAC,8BAA8B,CAAC;QACxC,OAAOQ,OAAO,CAACE,MAAM,EAAE;MAC3B,CAAC,MAAM;QACH,OAAOF,OAAO,CAACG,OAAO,EAAE;MAC5B;IACJ,CAAE;IACF,WAAW,EAAE,CAACJ,IAAI,EAAEC,OAAO,KAAK;MAC5B,OAAOA,OAAO,CAACI,KAAK,CAACC,MAAM,CAAC;QACxBC,cAAc,EAAE,CACZ;UACIC,WAAW,EAAEnB,OAAO,CAACmB,WAAW;UAChCC,MAAM,EAAE;YACJC,KAAK,EAAErB,OAAO,CAACsB;UACnB;QACJ,CAAC;MAET,CAAC,CAAC;IACN,CAAE;IACF,SAAS,EAAE,OAAOX,IAAI,EAAEC,OAAO,KAAK;MAChC,MAAMI,KAAK,GAAG,MAAMJ,OAAO,CAACI,KAAK,CAACO,OAAO,EAAE;MAC3CC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAET,KAAK,CAAC;MAE3BX,aAAa,CAACM,IAAI,CAACe,OAAO,CAAC;IAC/B,CAAE;IACF,QAAQ,EAAE,MAAM,CAEhB,CAAE;IACF,OAAO,EAAGC,GAAG,IAAK;MACdvB,QAAQ,CAACuB,GAAG,CAAC;MACbH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IACpB;EAAE;IAAA;IAAA;IAAA;EAAA,QACJ;AACN,CAAC;AAAA,GA5DK7B,oBAAoB;AAAA,KAApBA,oBAAoB;AA8D1B,eAAeA,oBAAoB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}